{"ast":null,"code":"var _jsxFileName = \"/Users/anugragupta/Desktop/sem2/frontend/src/components/DestinationCards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport SkeletonLoader from './SkeletonLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst destinations = [{\n  name: 'Spiti Valley',\n  image: 'https://images.unsplash.com/photo-1501785888041-af3ef285b470?auto=format&fit=crop&w=400&q=80',\n  description: 'A cold desert mountain valley in Himachal Pradesh, known for its surreal landscapes and monasteries.'\n}, {\n  name: 'Hampi',\n  image: 'https://images.unsplash.com/photo-1519125323398-675f0ddb6308?auto=format&fit=crop&w=400&q=80',\n  description: 'Ruins of a lost kingdom in Karnataka, dotted with boulders, temples, and a unique landscape.'\n}, {\n  name: 'Ziro Valley',\n  image: 'https://images.unsplash.com/photo-1464983953574-0892a716854b?auto=format&fit=crop&w=400&q=80',\n  description: 'A lush green valley in Arunachal Pradesh, famous for its rice fields and Apatani culture.'\n}, {\n  name: 'Tawang',\n  image: 'https://images.unsplash.com/photo-1500534314209-a25ddb2bd429?auto=format&fit=crop&w=400&q=80',\n  description: 'A scenic town in Arunachal Pradesh, home to India’s largest Buddhist monastery.'\n}, {\n  name: 'Chopta',\n  image: 'https://images.unsplash.com/photo-1465101046530-73398c7f28ca?auto=format&fit=crop&w=400&q=80',\n  description: 'Mini Switzerland of Uttarakhand, a base for treks to Tungnath and Chandrashila.'\n}, {\n  name: 'Majuli',\n  image: 'https://images.unsplash.com/photo-1502082553048-f009c37129b9?auto=format&fit=crop&w=400&q=80',\n  description: 'The world’s largest river island, located in Assam, rich in culture and natural beauty.'\n}];\nfunction DestinationCards() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const timer = setTimeout(() => setLoading(false), 1200);\n    return () => clearTimeout(timer);\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(SkeletonLoader, {\n    count: 3\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      px: {\n        xs: 1,\n        md: 0\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      justifyContent: \"center\",\n      children: destinations.map((dest, idx) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            borderRadius: 4,\n            boxShadow: '0 4px 24px rgba(34,34,34,0.10)',\n            transition: 'transform 0.3s, box-shadow 0.3s',\n            '&:hover': {\n              transform: 'translateY(-8px) scale(1.03)',\n              boxShadow: '0 8px 32px rgba(34,34,34,0.18)'\n            },\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            height: \"180\",\n            image: dest.image,\n            alt: dest.name,\n            sx: {\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              flexGrow: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"primary\",\n              gutterBottom: true,\n              children: dest.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: dest.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(DestinationCards, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n_c = DestinationCards;\nexport default DestinationCards;\nvar _c;\n$RefreshReg$(_c, \"DestinationCards\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Card","CardMedia","CardContent","Typography","Box","SkeletonLoader","jsxDEV","_jsxDEV","destinations","name","image","description","DestinationCards","_s","loading","setLoading","timer","setTimeout","clearTimeout","count","fileName","_jsxFileName","lineNumber","columnNumber","sx","flexGrow","px","xs","md","children","container","spacing","justifyContent","map","dest","idx","item","sm","borderRadius","boxShadow","transition","transform","height","display","flexDirection","component","alt","objectFit","variant","color","gutterBottom","_c","$RefreshReg$"],"sources":["/Users/anugragupta/Desktop/sem2/frontend/src/components/DestinationCards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport SkeletonLoader from './SkeletonLoader';\n\nconst destinations = [\n  {\n    name: 'Spiti Valley',\n    image: 'https://images.unsplash.com/photo-1501785888041-af3ef285b470?auto=format&fit=crop&w=400&q=80',\n    description: 'A cold desert mountain valley in Himachal Pradesh, known for its surreal landscapes and monasteries.'\n  },\n  {\n    name: 'Hampi',\n    image: 'https://images.unsplash.com/photo-1519125323398-675f0ddb6308?auto=format&fit=crop&w=400&q=80',\n    description: 'Ruins of a lost kingdom in Karnataka, dotted with boulders, temples, and a unique landscape.'\n  },\n  {\n    name: 'Ziro Valley',\n    image: 'https://images.unsplash.com/photo-1464983953574-0892a716854b?auto=format&fit=crop&w=400&q=80',\n    description: 'A lush green valley in Arunachal Pradesh, famous for its rice fields and Apatani culture.'\n  },\n  {\n    name: 'Tawang',\n    image: 'https://images.unsplash.com/photo-1500534314209-a25ddb2bd429?auto=format&fit=crop&w=400&q=80',\n    description: 'A scenic town in Arunachal Pradesh, home to India’s largest Buddhist monastery.'\n  },\n  {\n    name: 'Chopta',\n    image: 'https://images.unsplash.com/photo-1465101046530-73398c7f28ca?auto=format&fit=crop&w=400&q=80',\n    description: 'Mini Switzerland of Uttarakhand, a base for treks to Tungnath and Chandrashila.'\n  },\n  {\n    name: 'Majuli',\n    image: 'https://images.unsplash.com/photo-1502082553048-f009c37129b9?auto=format&fit=crop&w=400&q=80',\n    description: 'The world’s largest river island, located in Assam, rich in culture and natural beauty.'\n  },\n];\n\nfunction DestinationCards() {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setLoading(false), 1200);\n    return () => clearTimeout(timer);\n  }, []);\n\n  if (loading) return <SkeletonLoader count={3} />;\n\n  return (\n    <Box sx={{ flexGrow: 1, px: { xs: 1, md: 0 } }}>\n      <Grid container spacing={4} justifyContent=\"center\">\n        {destinations.map((dest, idx) => (\n          <Grid item xs={12} sm={6} md={4} key={idx}>\n            <Card\n              sx={{\n                borderRadius: 4,\n                boxShadow: '0 4px 24px rgba(34,34,34,0.10)',\n                transition: 'transform 0.3s, box-shadow 0.3s',\n                '&:hover': {\n                  transform: 'translateY(-8px) scale(1.03)',\n                  boxShadow: '0 8px 32px rgba(34,34,34,0.18)',\n                },\n                height: '100%',\n                display: 'flex',\n                flexDirection: 'column',\n              }}\n            >\n              <CardMedia\n                component=\"img\"\n                height=\"180\"\n                image={dest.image}\n                alt={dest.name}\n                sx={{ objectFit: 'cover' }}\n              />\n              <CardContent sx={{ flexGrow: 1 }}>\n                <Typography variant=\"h6\" color=\"primary\" gutterBottom>{dest.name}</Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">{dest.description}</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n\nexport default DestinationCards; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}